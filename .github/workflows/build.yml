name: Build and Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'
          cache: true

      - name: Check out code
        uses: actions/checkout@v4

      - name: Get dependencies
        run: go mod tidy

      - name: Install golangci-lint
        run: go install github.com/golangci/golangci-lint/cmd/golangci-lint@v1.54.2

      - name: Lint (CI optimized)
        run: make lint-ci

      - name: Generate Lint Report
        run: make lint-report
        if: always()  # Generate report even if linting fails

      - name: Upload Lint Report
        uses: actions/upload-artifact@v4
        with:
          name: lint-report
          path: output/reports/lint-report.json
        if: always()

  build:
    name: Build Only
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'
          cache: true

      - name: Check out code
        uses: actions/checkout@v4

      - name: Get dependencies
        run: go mod tidy

      - name: Test
        run: go test -v ./...

      - name: Build for Linux
        run: GOOS=linux GOARCH=amd64 go build -o usm-linux-amd64 -v

      - name: Build for macOS
        run: GOOS=darwin GOARCH=amd64 go build -o usm-darwin-amd64 -v

      - name: Build for Windows
        run: GOOS=windows GOARCH=amd64 go build -o usm-windows-amd64.exe -v

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: binaries
          path: |
            usm-linux-amd64
            usm-darwin-amd64
            usm-windows-amd64.exe

  test-lint:
    name: Test File Specific Linting
    runs-on: ubuntu-latest
    needs: [lint]
    steps:
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'
          cache: true

      - name: Check out code
        uses: actions/checkout@v4

      - name: Get dependencies
        run: go mod tidy

      - name: Install golangci-lint
        run: go install github.com/golangci/golangci-lint/cmd/golangci-lint@v1.54.2

      - name: Lint Test Files
        run: make lint-tests

  build-full:
    name: Build with Linting
    needs: [lint]
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'
          cache: true

      - name: Check out code
        uses: actions/checkout@v4

      - name: Get dependencies
        run: go mod tidy

      - name: Install golangci-lint
        run: go install github.com/golangci/golangci-lint/cmd/golangci-lint@v1.54.2

      - name: Build with linting
        run: make build-full

      - name: Test
        run: go test -v ./...

      - name: Check for Dead Code
        run: make lint-fix-deadcode
        continue-on-error: true  # Continue even if dead code is found