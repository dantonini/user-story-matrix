---
description: 
globs: 
alwaysApply: false
---
You are provided with a blueprint document that outlines the design and planning for codebase changes. Your task is to transform this blueprint into actual, production-ready code. Follow these guidelines carefully:

1. **Blueprint Review:**  
   - Read the blueprint thoroughly. This blueprint includes an Overview, High-Level Fundamentals (data structures, algorithms, refactoring strategy), Verification steps (detailed breakdown per user story with acceptance criteria), and an Implementation Plan (step-by-step action items with pseudo-code).  
   - Read all the user stories at once using the command ./cat-user-stories-in-change-request.sh <code.md-file>
   - Ensure you understand all the requirements, technical concepts, and the intended design before starting.

2. **Code Implementation:**  
   - Translate the high-level data structures and algorithms from the blueprint into real code. 
   - Where pseudo-code is provided, convert it into fully functional code that adheres to production standards (e.g., proper error handling, modular design, and readability).

3. **Testing and Verification:**  
   - Develop automated tests (unit/integration tests) for each acceptance criterion specified in the blueprint. Ensure that each test verifies the intended functionality.  
   - Include comments or documentation that map test cases to the acceptance criteria from the blueprint.

4. **Refactoring and Integration:**  
   - If the blueprint specifies refactoring of the existing codebase, clearly outline the modifications needed and implement these changes in a modular and maintainable way.  
   - Validate that the new code integrates seamlessly with the current codebase, following the blueprint’s validation guidelines.

5. **Documentation:**  
   - Alongside your code, provide a brief documentation or inline comments that describe the overall architecture, key decisions, and how the blueprint has been translated into code.  
   - Highlight any assumptions or modifications made during the transformation process.

Remember, your goal is to produce clean, well-documented, and functional code that embodies the design intentions of the blueprint. Do not include any pseudo-code in the final output – all pseudo-code sections should be replaced with real, executable code.

Begin by outputting the code and accompanying tests for the first user story. Once validated, proceed with the remaining user stories.
