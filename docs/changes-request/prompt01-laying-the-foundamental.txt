You are about to begin a new iteration of software development based on a set of user stories described in a blueprint document. 

The whole iteration is divided into 4 phases:
- Laid the foundation (project structure, placeholders, key abstractions)
- Complete the Minimum Viable Implementation (MVI) to satisfy core acceptance criteria
- Extend the implementation to support more scenarios and edge cases
- Refine and stabilize the codebase for clarity, maintainability, and performance

Your task is to lay the foundation‚Äîthat is, to prepare the codebase to safely and effectively accommodate the upcoming changes.



This phase includes two core responsibilities:
üß± 1. Architecture & Design Setup
üõ†Ô∏è 2. Refactoring / Re-architecting
üß™ Mandatory Testing Requirements

# Architecture & Design Setup
Analyze the blueprint and user stories to identify the new modules, services, or components that will be needed.
Design the structural layout of these new elements, even if they are not yet fully implemented.
Define key interfaces, APIs, class responsibilities, and high-level data flows.
Introduce placeholders (e.g., method stubs, empty classes, files) as needed to scaffold the system and ensure developers can start working on each part independently.

Deliverables:

- Skeletons of new modules, files, and class/functions definitions
- Use a lot of comments / TODO and dummy implementations 
- Basic integration points with existing code
- Updated diagrams or descriptions (if applicable)

Goal:
- To create a solid, extensible structure that reflects the target design and allows iterative implementation with minimal rework.

# Refactoring / Re-architecting
Assess the existing codebase for parts that block or conflict with the new blueprint.
Identify code smells, tight couplings, or brittle logic that could hinder future development.
Carefully refactor or re-architect areas that require cleanup or realignment to match the upcoming design.
Maintain behavior during this process‚Äîthis is not about adding new features yet.

Deliverables:
- Refactored modules or components with improved structure
- Simplified interfaces or decoupled logic
- Regression tests to ensure no existing functionality breaks
- An accomplishment report in ./docs/changes-request/2025-03-26-020055-code-command.code.md.01-foundation.accomplished.md

The accomplishment report is not a summary, it is a "compass" to the changes you made, hence avoid general statements/claim, be precise:
Use always short code references (no code at all, 
 just a compact/understable reference to lookup for, do not use line numbers) 
 as foundation of your statements
 For example:
 - Instead of "Added tests for ..." / "Updated tests for ... " show me which test case has been added (using code references)
 - Instead of "Message templates are now centralized with clear naming conventions" show me where to find them (using code references)
 - Include a section of "blind spot" if any: leverage test coverage report to reinforce your statements
 - Include a dedicated section for potentially still not yet well implemented acceptance criteria.
 - Include any changes to original design decisions

Goal:
- To reduce technical debt and align the current codebase with the structural needs of the upcoming iteration.

# Mandatory Testing Requirements
After refactoring or structural changes, run the full test suite to confirm no regressions have been introduced.
If major components are touched, consider adding or updating smoke/regression tests to validate the foundation work.

üìò Instructions
- Clearly document each architectural or structural decision, especially where existing components were modified.
- Leave TODOs or comments where further implementation will happen in later phases.
- Do not implement the full logic yet‚Äîthis phase is strictly for setting up structure and enabling smooth feature delivery.

Now:
Read the user stories using ./cat-user-stories-in-change-request.sh docs/changes-request/2025-03-31-081819-introduce-step-prompt.blueprint.md
Read the blueprint using cat docs/changes-request/2025-03-31-081819-introduce-step-prompt.blueprint.md
